{"name":"游戏开发","permalink":"http://blog.keepmovingxin.com/categories/游戏开发/","url":"/async/categories/游戏开发.json","count":11,"_total":11,"_totalPage":2,"_page":2,"posts":[{"tags":[{"name":"Lua","permalink":"http://blog.keepmovingxin.com/tags/Lua/","url":"/async/tags/Lua.json","count":9}],"categories":[{"name":"游戏开发","permalink":"http://blog.keepmovingxin.com/categories/游戏开发/","url":"/async/categories/游戏开发.json","count":11}],"url":"/async/posts/2016/05/25/Lua-metable.json","date":1464161405000,"path":{"year":2016,"month":5,"day":25,"name":"Lua-metable"},"title":"了解Lua metatable 元表","permalink":"http://blog.keepmovingxin.com/2016/05/25/Lua-metable/","content":"<p>参考lua手册，<code>metatable</code>是被译作元表，Lua 中的每个值都可以用一个 <code>metatable</code>。这个 <code>metatable</code> 就是一个原始的 Lua table，它用来定义原始值在特定操作下的行为。</p>\n<h3 id=\"metatable\"><a href=\"#metatable\" class=\"headerlink\" title=\"metatable\"></a><code>metatable</code></h3><p>一个 <code>metatable</code> 可以控制一个对象做数学运算操作、比较操作、连接操作、取长度操作、取下标操作时的行为，metatable 中还可以定义一个函数，让 <code>userdata</code> 作垃圾收集时调用它。对于这些操作，Lua 都将其关联上一个被称作事件的指定健。当 Lua 需要对一个值发起这些操作中的一个时，它会去检查值中 metatable 中是否有对应事件。如果有的话，键名对应的值（元方法）将控制 Lua 怎样做这个操作。</p>"}]}